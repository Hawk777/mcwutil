#!/usr/bin/env python3

import os.path
import shutil
import subprocess
import sys
import tempfile

substitutions = [
	(149, 238),
	(151, 254),
	(147, 251),
	(150, 255),
	(146, 252),
	(145, 253),
	(128, 149),
	(117, 137),
	(116, 136),
	(126, 147),
	(125, 146),
	(118, 138),
	(129, 150),
	(130, 151),
	(127, 148),
	(124, 144),
	(121, 141),
	(123, 143),
	(120, 140),
	(119, 139),
	(122, 142)]

# Create a temporary directory to work in.
tmpdir = tempfile.mkdtemp()
try:
	print("Working in {}...".format(tmpdir))
	workdir = os.path.join(tmpdir, "region")
	worknbt = os.path.join(tmpdir, "work.nbt")
	workxml = os.path.join(tmpdir, "work.xml")

	# Iterate all the .mcr files provided on the command line.
	for region in sys.argv[1:]:
		# Unpack the chunks from the region.
		os.mkdir(workdir)
		print("Unpacking region {}...".format(region))
		subprocess.check_call(["bin/mcwutil", "region-unpack", region, workdir])

		# Go through all the chunks.
		print("Processing chunks...")
		chunk_counter = 0
		for zlib in os.listdir(workdir):
			if zlib.endswith(".nbt.zlib"):
				# Display the chunk counter.
				print(chunk_counter, end="\r")
				chunk_counter = chunk_counter + 1
				# Decompress the chunk.
				subprocess.check_call(["bin/mcwutil", "zlib-decompress", os.path.join(workdir, zlib), worknbt])
				# Execute the ID substitutions in the world's block array.
				patch_command = ["bin/mcwutil", "nbt-patch-barray", worknbt, "/Level/Blocks"]
				for sub in substitutions:
					patch_command.append(str(sub[0]))
					patch_command.append(str(sub[1]))
				subprocess.check_call(patch_command)
				# Convert the NBT to XML.
				subprocess.check_call(["bin/mcwutil", "nbt-to-xml", worknbt, workxml])
				# Execute the ID substitutions in entity inventories.
				for sub in substitutions:
					xpath = "//named[@name='Items']/list/compound/named[@name='id']/short[@value='{}']/@value".format(sub[0])
					subprocess.check_call(["xmlstarlet", "ed", "-P", "-L", "-u", xpath, "-v", str(sub[1]), workxml])
				# Execute the TileGenericPipe fix.
				xpath = "//named[@name='TileEntities']/list/compound/named[@name='id']/string[@value='net.minecraft.src.buildcraft.transport.TileGenericPipe']/@value"
				subprocess.check_call(["xmlstarlet", "ed", "-P", "-L", "-u", xpath, "-v", "net.minecraft.src.buildcraft.GenericPipe", workxml])
				# Convert the XML to NBT.
				subprocess.check_call(["bin/mcwutil", "nbt-from-xml", workxml, worknbt])
				# Recompress the chunk.
				subprocess.check_call(["bin/mcwutil", "zlib-compress", worknbt, os.path.join(workdir, zlib)])

		# Pack the region up again.
		print("Packing region {}...".format(region))
		subprocess.check_call(["bin/mcwutil", "region-pack", workdir, region])

		# Clear the directory.
		shutil.rmtree(workdir)
finally:
	shutil.rmtree(tmpdir)
